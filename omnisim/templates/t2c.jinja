Communication {{ thing.name }}Comms
    endpoints
        {# Case 1: composite with sensors #}
        {% if thing.sensors is defined %}
            {% for sensor in thing.sensors %}
        publisher
            topic: 'sensor.{{ sensor.ref.__class__.__name__|lower }}.{{ sensor.ref.type|lower }}'
            msg: {{ sensor.ref.dataModel.name }}Message
        end
            {% endfor %}
        {% endif %}
        {# Case 2: composite with actuators #}
        {% if thing.actuators is defined %}
            {% for actuator in thing.actuators %}
        publisher
            topic: 'actuator.{{ actuator.ref.__class__.__name__|lower }}.{{ actuator.ref.type|lower }}'
            msg: {{ actuator.ref.dataModel.name }}Message
        end
            {% endfor %}
        {% endif %}
        {# Case 3: atomic thing directly a sensor/actuator #}
        {% if thing.dataModel is defined %}
        publisher
            topic: '{{ thing.class|lower }}.{{ thing.__class__.__name__|lower }}.{{ thing.type|lower }}'
            msg: {{ thing.dataModel.name }}Message
        end
        {% endif %}
    end

    messages
        {% if thing.sensors is defined %}
            {% for sensor in thing.sensors %}
        TopicMsg {{ sensor.ref.dataModel.name }}Message
            pubFreq: float
            type: str
            {{ thing.class|lower }}_id: str
            {% for p in sensor.ref.dataModel.properties %}
            {{ p.name }}: {{ p.type }}
            {% endfor %}
        end
            {% endfor %}
        {% endif %}
        {% if thing.actuators is defined %}
            {% for actuator in thing.actuators %}
        TopicMsg {{ actuator.ref.dataModel.name }}Message
            pubFreq: float
            type: str
            {{ thing.class|lower }}_id: str
            {% for p in actuator.ref.dataModel.properties %}
            {{ p.name }}: {{ p.type }}
            {% endfor %}
        end
            {% endfor %}
        {% endif %}
        {% if thing.dataModel is defined %}
        TopicMsg {{ thing.dataModel.name }}Message
            pubFreq: float
            type: str
            {{ thing.class|lower }}_id: str
            {% for p in thing.dataModel.properties %}
            {{ p.name }}: {{ p.type }}
            {% endfor %}
        end
        {% endif %}
    end
end